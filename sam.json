{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Transform": "AWS::Serverless-2016-10-31",
  "Description": "Exported by architect/package@1.0.39 on 2019-08-27T20:00:40.504Z",
  "Resources": {
    "Testcors": {
      "Type": "AWS::Serverless::Api",
      "Properties": {
        "StageName": "staging",
        "DefinitionBody": {
          "openapi": "3.0.1",
          "info": {
            "title": {
              "Ref": "AWS::StackName"
            }
          },
          "paths": {
            "/": {
              "get": {
                "responses": {
                  "200": {
                    "description": "200 response"
                  }
                },
                "x-amazon-apigateway-integration": {
                  "uri": {
                    "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetIndex.Arn}/invocations"
                  },
                  "responses": {
                    "default": {
                      "statusCode": "200",
                      "contentHandling": "CONVERT_TO_TEXT"
                    }
                  },
                  "passthroughBehavior": "when_no_match",
                  "httpMethod": "POST",
                  "contentHandling": "CONVERT_TO_TEXT",
                  "type": "aws_proxy"
                }
              }
            },
            "/foo": {
              "get": {
                "responses": {
                  "200": {
                    "description": "200 response",
                    "headers": {
                      "Access-Control-Allow-Headers": {
                        "type": "string"
                      },
                      "Access-Control-Allow-Methods": {
                        "type": "string"
                      },
                      "Access-Control-Allow-Origin": {
                        "type": "string"
                      }
                    }
                  }
                },
                "x-amazon-apigateway-integration": {
                  "uri": {
                    "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetFoo.Arn}/invocations"
                  },
                  "responses": {
                    "default": {
                      "statusCode": "200",
                      "contentHandling": "CONVERT_TO_TEXT",
                      "responseParameters": {
                        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                        "method.response.header.Access-Control-Allow-Methods": "'*'",
                        "method.response.header.Access-Control-Allow-Origin": "'*'"
                      }
                    }
                  },
                  "passthroughBehavior": "when_no_match",
                  "httpMethod": "POST",
                  "contentHandling": "CONVERT_TO_TEXT",
                  "type": "aws_proxy"
                }
              },
              "options": {
                "responses": {
                  "200": {
                    "headers": {
                      "Access-Control-Allow-Method": {
                        "schema": {
                          "type": "string"
                        }
                      },
                      "Access-Control-Allow-Origin": {
                        "schema": {
                          "type": "string"
                        }
                      },
                      "Access-Control-Allow-Credentials": {
                        "schema": {
                          "type": "string"
                        }
                      },
                      "Access-Control-Allow-Headers": {
                        "schema": {
                          "type": "string"
                        }
                      }
                    },
                    "content": {}
                  }
                },
                "x-amazon-apigateway-integration": {
                  "responses": {
                    "default": {
                      "statusCode": "200"
                    }
                  },
                  "passthroughBehavior": "when_no_match",
                  "requestTemplates": {
                    "application/json": "{\"statusCode\": 200}"
                  },
                  "type": "mock"
                }
              }
            },
            "/open": {
              "get": {
                "responses": {
                  "200": {
                    "description": "200 response"
                  }
                },
                "x-amazon-apigateway-integration": {
                  "uri": {
                    "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetOpen.Arn}/invocations"
                  },
                  "responses": {
                    "default": {
                      "statusCode": "200",
                      "contentHandling": "CONVERT_TO_TEXT"
                    }
                  },
                  "passthroughBehavior": "when_no_match",
                  "httpMethod": "POST",
                  "contentHandling": "CONVERT_TO_TEXT",
                  "type": "aws_proxy"
                }
              }
            },
            "/{proxy+}": {
              "x-amazon-apigateway-any-method": {
                "parameters": [
                  {
                    "name": "proxy",
                    "in": "path",
                    "required": true,
                    "schema": {
                      "type": "string"
                    }
                  }
                ],
                "x-amazon-apigateway-integration": {
                  "uri": {
                    "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetIndex.Arn}/invocations"
                  },
                  "responses": {
                    "default": {
                      "statusCode": "200"
                    }
                  },
                  "passthroughBehavior": "when_no_match",
                  "httpMethod": "POST",
                  "cacheNamespace": "xlr8r",
                  "cacheKeyParameters": [
                    "method.request.path.proxy"
                  ],
                  "contentHandling": "CONVERT_TO_TEXT",
                  "type": "aws_proxy"
                }
              }
            }
          }
        },
        "EndpointConfiguration": "REGIONAL",
        "BinaryMediaTypes": [
          "*~1*"
        ],
        "MinimumCompressionSize": 0
      }
    },
    "GetIndex": {
      "Type": "AWS::Serverless::Function",
      "Properties": {
        "Handler": "index.handler",
        "CodeUri": "./src/http/get-index",
        "Runtime": "nodejs10.x",
        "MemorySize": 1152,
        "Timeout": 5,
        "Environment": {
          "Variables": {
            "ARC_ROLE": {
              "Ref": "Role"
            },
            "ARC_CLOUDFORMATION": {
              "Ref": "AWS::StackName"
            },
            "ARC_APP_NAME": "testcors",
            "NODE_ENV": "staging",
            "SESSION_TABLE_NAME": "jwe",
            "PYTHONPATH": "/var/task/vendor:/var/runtime:/opt/python"
          }
        },
        "Role": {
          "Fn::Sub": [
            "arn:aws:iam::${AWS::AccountId}:role/${roleName}",
            {
              "roleName": {
                "Ref": "Role"
              }
            }
          ]
        },
        "Events": {
          "GetIndexEvent": {
            "Type": "Api",
            "Properties": {
              "Path": "/",
              "Method": "GET",
              "RestApiId": {
                "Ref": "Testcors"
              }
            }
          }
        }
      }
    },
    "GetFoo": {
      "Type": "AWS::Serverless::Function",
      "Properties": {
        "Handler": "index.handler",
        "CodeUri": "./src/http/get-foo",
        "Runtime": "nodejs10.x",
        "MemorySize": 1152,
        "Timeout": 5,
        "Environment": {
          "Variables": {
            "ARC_ROLE": {
              "Ref": "Role"
            },
            "ARC_CLOUDFORMATION": {
              "Ref": "AWS::StackName"
            },
            "ARC_APP_NAME": "testcors",
            "NODE_ENV": "staging",
            "SESSION_TABLE_NAME": "jwe",
            "PYTHONPATH": "/var/task/vendor:/var/runtime:/opt/python"
          }
        },
        "Role": {
          "Fn::Sub": [
            "arn:aws:iam::${AWS::AccountId}:role/${roleName}",
            {
              "roleName": {
                "Ref": "Role"
              }
            }
          ]
        },
        "Events": {
          "GetFooEvent": {
            "Type": "Api",
            "Properties": {
              "Path": "/foo",
              "Method": "GET",
              "RestApiId": {
                "Ref": "Testcors"
              }
            }
          }
        }
      }
    },
    "GetOpen": {
      "Type": "AWS::Serverless::Function",
      "Properties": {
        "Handler": "index.handler",
        "CodeUri": "./src/http/get-open",
        "Runtime": "nodejs10.x",
        "MemorySize": 1152,
        "Timeout": 5,
        "Environment": {
          "Variables": {
            "ARC_ROLE": {
              "Ref": "Role"
            },
            "ARC_CLOUDFORMATION": {
              "Ref": "AWS::StackName"
            },
            "ARC_APP_NAME": "testcors",
            "NODE_ENV": "staging",
            "SESSION_TABLE_NAME": "jwe",
            "PYTHONPATH": "/var/task/vendor:/var/runtime:/opt/python"
          }
        },
        "Role": {
          "Fn::Sub": [
            "arn:aws:iam::${AWS::AccountId}:role/${roleName}",
            {
              "roleName": {
                "Ref": "Role"
              }
            }
          ]
        },
        "Events": {
          "GetOpenEvent": {
            "Type": "Api",
            "Properties": {
              "Path": "/open",
              "Method": "GET",
              "RestApiId": {
                "Ref": "Testcors"
              }
            }
          }
        }
      }
    },
    "InvokeProxyPermission": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Ref": "GetIndex"
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Sub": [
            "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${restApiId}/*/*",
            {
              "restApiId": {
                "Ref": "Testcors"
              }
            }
          ]
        }
      }
    },
    "Role": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": "ArcGlobalPolicy",
            "PolicyDocument": {
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents",
                    "logs:DescribeLogStreams"
                  ],
                  "Resource": "arn:aws:logs:*:*:*"
                }
              ]
            }
          }
        ]
      }
    },
    "RoleReflectionPolicy": {
      "Type": "AWS::IAM::Policy",
      "DependsOn": "Role",
      "Properties": {
        "PolicyName": "ArcRoleReflectionPolicy",
        "PolicyDocument": {
          "Statement": [
            {
              "Effect": "Allow",
              "Action": "iam:GetRolePolicy",
              "Resource": {
                "Fn::Sub": [
                  "arn:aws:iam::${AWS::AccountId}:role/${role}",
                  {
                    "role": {
                      "Ref": "Role"
                    }
                  }
                ]
              }
            }
          ]
        },
        "Roles": [
          {
            "Ref": "Role"
          }
        ]
      }
    }
  },
  "Outputs": {
    "API": {
      "Description": "API Gateway",
      "Value": {
        "Fn::Sub": [
          "https://${restApiId}.execute-api.${AWS::Region}.amazonaws.com/staging",
          {
            "restApiId": {
              "Ref": "Testcors"
            }
          }
        ]
      }
    },
    "restApiId": {
      "Description": "HTTP restApiId",
      "Value": {
        "Ref": "Testcors"
      }
    }
  }
}